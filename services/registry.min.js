!function(root,factory){"function"==typeof define&&define.amd?define(["stratus","underscore","angular","stratus.services.collection","stratus.services.model"],factory):factory(root.Stratus,root._)}(this,function(Stratus,_){Stratus.Services.Registry=["$provide",function($provide){$provide.factory("registry",function(collection,model,$interpolate,$q){return function(){this.fetch=function($element,$scope){var that=this;return new $q(function(resolve,reject){angular.isString($element)&&($element={target:$element});var options={target:$element.attr?$element.attr("data-target"):$element.target,id:$element.attr?$element.attr("data-id"):$element.id,manifest:$element.attr?$element.attr("data-manifest"):$element.manifest,decouple:$element.attr?$element.attr("data-decouple"):$element.decouple,api:$element.attr?$element.attr("data-api"):$element.api},completed=0;$scope.$watch(function(){return completed},function(iteration){_.isNumber(iteration)&&parseInt(iteration)===_.size(options)&&resolve(that.build(options,$scope))}),_.each(options,function(element,key){if(element&&angular.isString(element)){var interpreter=$interpolate(element,!1,null,!0),initial=interpreter($scope.$parent);angular.isDefined(initial)?(options[key]=initial,completed++):$scope.$watch(function(){return interpreter($scope.$parent)},function(value){value&&(options[key]=value,completed++)})}else completed++})})},this.build=function(options,$scope){var data;if(options.target){if(options.target=_.ucfirst(options.target),options.manifest||options.id){Stratus.Catalog[options.target]||(Stratus.Catalog[options.target]={});var id=options.id||"manifest";options.decouple||!Stratus.Catalog[options.target][id]?(data=new model({target:options.target,manifest:options.manifest},{id:options.id}),options.decouple||(Stratus.Catalog[options.target][id]=data)):Stratus.Catalog[options.target][id]&&(data=Stratus.Catalog[options.target][id])}else Stratus.Catalog[options.target]||(Stratus.Catalog[options.target]={}),options.decouple||!Stratus.Catalog[options.target].collection?(data=new collection({target:options.target}),options.decouple||(Stratus.Catalog[options.target].collection=data)):Stratus.Catalog[options.target].collection&&(data=Stratus.Catalog[options.target].collection);options.api&&data.meta.set("api",_.isJSON(options.api)?JSON.parse(options.api):options.api)}return angular.isObject(data)&&("undefined"!=typeof $scope&&($scope.data=data,data instanceof model?$scope.model=data:data instanceof collection&&($scope.collection=data)),data.pending||data.completed||data.fetch()),data}}})}]});