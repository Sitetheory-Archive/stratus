!function(root,factory){"function"==typeof define&&define.amd?define(["stratus","underscore","angular","stratus.services.commonMethods"],factory):factory(root.Stratus,root._,root.angular)}(this,function(Stratus,_,angular){Stratus.Controllers.ProductFilter=["$scope","$log","commonMethods",function($scope,$log,commonMethods){function filter(type,data){delete $scope.collection.meta.get("api").options,function(){if($scope.minPrice>$scope.maxPrice)return;0<$scope.minPrice&&0<$scope.maxPrice&&$scope.maxPrice>=$scope.minPrice?($scope.collection.meta.set("api.options.minPrice",$scope.minPrice),$scope.collection.meta.set("api.options.maxPrice",$scope.maxPrice)):0<$scope.minPrice?$scope.collection.meta.set("api.options.minPrice",$scope.minPrice):0<$scope.maxPrice&&$scope.collection.meta.set("api.options.maxPrice",$scope.maxPrice)}(),$scope.collection.meta.set("api.options.filterStatus",$scope.showOnly),$scope.collection.fetch().then(function(response){$log.log("response",response)})}(Stratus.Instances[_.uniqueId("product_filter_")]=$scope).Stratus=Stratus,$scope._=_,$scope.showOnly=[],$scope.status=[{desc:"Active",value:1},{desc:"Inactive",value:0},{desc:"Deleted",value:-1}],$scope.minPrice=0,$scope.maxPrice=0,$scope.billingIncrementOptions={i:"Minutely",h:"Hourly",d:"Daily",w:"Weekly",m:"Monthly",q:"Quarterly",y:"Yearly"},$scope.toggle=function(value){var index=$scope.showOnly.indexOf(value);-1!==index?$scope.showOnly.splice(index,1):$scope.showOnly.push(value),filter()},$scope.$watchCollection("[minPrice, maxPrice]",function(newVal,oldVal){$scope.minPrice>$scope.maxPrice||filter()}),$scope.safeMessage=function(message){return console.log("message",message),commonMethods.safeMessage(message)}}]});