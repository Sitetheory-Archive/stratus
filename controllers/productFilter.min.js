<<<<<<< c0b03aedbd0b430827480a6ee160311c50f518ec
!function(root,factory){"function"==typeof define&&define.amd?define(["stratus","underscore","angular"],factory):factory(root.Stratus,root._)}(this,function(Stratus,_){Stratus.Controllers.ProductFilter=["$scope","$log",function($scope,$log){Stratus.Instances[_.uniqueId("product_filter_")]=$scope,$scope.Stratus=Stratus,$scope._=_,$scope.showOnly=[],$scope.status=[{desc:"Active",value:1},{desc:"Inactive",value:0},{desc:"Deleted",value:-1}],$scope.minPrice=0,$scope.maxPrice=0,$scope.billingIncrementOptions={i:"Minutely",h:"Hourly",d:"Daily",w:"Weekly",m:"Monthly",q:"Quarterly",y:"Yearly"},$scope.toggle=function(value){var index=$scope.showOnly.indexOf(value);-1!==index?$scope.showOnly.splice(index,1):$scope.showOnly.push(value),filter()};function filter(type,data){!function(){if($scope.minPrice>$scope.maxPrice)return;$scope.minPrice>0&&$scope.maxPrice>0&&$scope.maxPrice>=$scope.minPrice?($scope.collection.meta.set("api.options.minPrice",$scope.minPrice),$scope.collection.meta.set("api.options.maxPrice",$scope.maxPrice)):$scope.minPrice>0?$scope.collection.meta.set("api.options.minPrice",$scope.minPrice):$scope.maxPrice>0&&$scope.collection.meta.set("api.options.maxPrice",$scope.maxPrice)}(),filter("api.options.filterStatus",$scope.showOnly),$scope.collection.fetch().then(function(response){$log.log("response",response)}),delete $scope.collection.meta.get("api").options}$scope.$watchCollection("[minPrice, maxPrice]",function(newVal,oldVal){$scope.minPrice>$scope.maxPrice||filter()})}]});
=======
<<<<<<< 3fbe5ed26dafd805948c6b17660f852ce10f1215
!function(root,factory){"function"==typeof define&&define.amd?define(["stratus","underscore","angular"],factory):factory(root.Stratus,root._)}(this,function(Stratus,_){Stratus.Controllers.ProductFilter=["$scope","$log",function($scope,$log){function filterStatus(){!function(type,data){$scope.collection.meta.set(type,data),$scope.collection.fetch().then(function(response){$log.log("response",response)})}("api.options.status",$scope.showOnly)}Stratus.Instances[_.uniqueId("product_filter_")]=$scope,$scope.Stratus=Stratus,$scope._=_,$scope.showOnly=[],$scope.status=[{desc:"Active",value:1},{desc:"Inactive",value:0},{desc:"Deleted",value:-1}],$scope.minPrice=0,$scope.maxPrice=0,$scope.billingIncrementOptions={i:"Minutely",h:"Hourly",d:"Daily",w:"Weekly",m:"Monthly",q:"Quarterly",y:"Yearly"},$scope.toggle=function(value){var index=$scope.showOnly.indexOf(value);-1!==index?$scope.showOnly.splice(index,1):$scope.showOnly.push(value),filterStatus()},$scope.$watchCollection("[minPrice, maxPrice]",function(newVal,oldVal){$scope.minPrice>=0&&$scope.maxPrice>=0&&($scope.collection.meta.set("api.options.minPrice",$scope.minPrice),$scope.collection.meta.set("api.options.maxPrice",$scope.maxPrice),$scope.collection.fetch().then(function(response){$log.log("response",response)}))})}]});
=======
!function(root,factory){"function"==typeof define&&define.amd?define(["stratus","underscore","angular"],factory):factory(root.Stratus,root._)}(this,function(Stratus,_){Stratus.Controllers.ProductFilter=["$scope","$element","$log","$http","$parse",function($scope,$element,$log,$http,$parse){Stratus.Instances[_.uniqueId("product_filter_")]=$scope,$scope.Stratus=Stratus,$scope._=_,$scope.models=[],$scope.contents=[],$scope.status=[{desc:"Active",value:1},{desc:"Inactive",value:0},{desc:"Deleted",value:-1}],$scope.showOnly=[],$scope.billingIncrementOptions={i:"Minutely",h:"Hourly",d:"Daily",w:"Weekly",m:"Monthly",q:"Quarterly",y:"Yearly"},$scope.$watch("collection.models",function(models){models&&models.length>0&&($scope.models=$scope.contents=models)}),$scope.toggle=function(value){var index=$scope.showOnly.indexOf(value);-1!==index?$scope.showOnly.splice(index,1):$scope.showOnly.push(value),function(){if($scope.contents=[],0==$scope.showOnly.length)return void($scope.contents=$scope.models);angular.forEach($scope.models,function(model){-1!=$scope.showOnly.indexOf(model.data.status)&&$scope.contents.push(model)})}()}}]});
>>>>>>> wip - new UI for media uploader
>>>>>>> wip - new UI for media uploader
