//     Stratus.Directives.Validate.js 1.0
//     Copyright (c) 2016 by Sitetheory, All Rights Reserved
//
//     All information contained herein is, and remains the
//     property of Sitetheory and its suppliers, if any.
//     The intellectual and technical concepts contained herein
//     are proprietary to Sitetheory and its suppliers and may be
//     covered by U.S. and Foreign Patents, patents in process,
//     and are protected by trade secret or copyright law.
//     Dissemination of this information or reproduction of this
//     material is strictly forbidden unless prior written
//     permission is obtained from Sitetheory.
//
//     For full details and documentation:
//     http://docs.sitetheory.io
!function(root,factory){"function"==typeof define&&define.amd?define(["stratus","underscore","angular"],factory):factory(root.Stratus,root._)}(this,function(Stratus,_){Stratus.Directives.Validate=function($parse){return{restrict:"A",require:"ngModel",scope:{validateValid:"=validateValid",validateInvalid:"=validateInvalid",validateComparison:"=validateComparison"},link:function($scope,$element,$attrs,$ctrl){function checkValues(ngModelValue){return $scope.checks={},$attrs.validateComparison&&($scope.checks.validateComparison=!$scope.validateComparison),$scope.validateInvalid?$scope.checks.validateInvalid=!_.contains(_.isArray($scope.validateInvalid)?$scope.validateInvalid:[$scope.validateInvalid],ngModelValue):$scope.validateValid&&($scope.checks.validateValid=_.contains(_.isArray($scope.validateValid)?$scope.validateValid:[$scope.validateValid],ngModelValue)),_.each($scope.checks,function(el,key){$ctrl.$setValidity(key,el)}),$ctrl.$setValidity("validateAny",_.every($scope.checks)),ngModelValue}Stratus.Instances[_.uniqueId("validate_")]=$scope,$ctrl.$parsers.push(checkValues)}}}});