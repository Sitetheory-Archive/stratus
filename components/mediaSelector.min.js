console.log("drag again"),function(root,factory){"function"==typeof define&&define.amd?define(["stratus","underscore","angular","angular-material","angular-file-upload","stratus.components.search","stratus.components.pagination","stratus.directives.singleClick","stratus.directives.src","stratus.services.registry"],factory):factory(root.Stratus,root._)}(this,function(Stratus,_){Stratus.Modules.ngFileUpload=!0,Stratus.Components.MediaSelector={bindings:{ngModel:"=",target:"@",limit:"@"},controller:function($scope,$http,$attrs,$parse,$element,Upload,$compile,registry,$mdPanel,$q,$mdDialog){function DialogController(mdPanelRef){$scope.closeDialog=function(){mdPanelRef.close()}}function ZoomController(mdPanelRef){$scope.deleteMediaFromLibrary=function(fileId){mdPanelRef.close();var confirm=$mdDialog.confirm().title("DELETE MEDIA").textContent("Are you sure you want to permanently delete this from your library?").ok("Yes").cancel("No");$mdDialog.show(confirm).then(function(){$http({method:"DELETE",url:"/Api/Media/"+fileId}).then(function(response){if($scope.draggedFiles.length>0)for(var k=0;k<$scope.draggedFiles.length;k++)$scope.draggedFiles[k].id===fileId&&$scope.draggedFiles.splice(k,1);$scope.uploadMedia()},function(rejection){console.log(rejection.data)})},function(){console.log("No")})},$scope.closeZoom=function(){mdPanelRef.close()}}Stratus.Instances[_.uniqueId("media_selector_")]=$scope,Stratus.Internals.CssLoader(Stratus.BaseUrl+"sitetheorystratus/stratus/components/mediaSelector"+(Stratus.Environment.get("production")?".min":"")+".css"),$scope.registry=new registry,$scope.registry.fetch({target:$attrs.target||"Media",id:null,manifest:!1,decouple:!0,api:{limit:_.isJSON($attrs.limit)?JSON.parse($attrs.limit):30}},$scope),$scope.showLibrary=!1,$scope.showDragDropLibrary=!1,$scope.draggedFiles=[],$scope.files=[],$scope.draggedDivChanged=!1,$scope.dropDisabled=!1,$scope.$watch("$ctrl.ngModel",function(data){_.isUndefined(data)||_.isEqual($scope.draggedFiles,data)||($scope.draggedFiles=data||[])}),$scope.$watch("draggedFiles",function(data){!_.isArray(data)||_.isUndefined($scope.$ctrl.ngModel)||_.isEqual($scope.draggedFiles,$scope.$ctrl.ngModel)||($scope.$ctrl.ngModel=$scope.draggedFiles)},!0),$scope.uploadComp=!1,$scope.movedFileId="",$scope.errorUpload=!1,$scope.libraryVisible=!1,$scope.dragLibraryVisible=!1,$scope.zoomView=function(event){$scope.mediaDetail=event;var position=$mdPanel.newPanelPosition().absolute().center(),config={attachTo:angular.element(document.body),scope:$scope,disableParentScroll:this.disableParentScroll,controller:ZoomController,templateUrl:"mediaDetail.html",hasBackdrop:!0,panelClass:"media-dialog",position:position,trapFocus:!0,zIndex:150,clickOutsideToClose:!1,escapeToClose:!0,focusOnOpen:!0};$mdPanel.open(config)},$scope.draggedFileId="",$scope.dragSelected=function($isDragging,$class,$event){"dragover"===$event.type&&""!==$event.explicitOriginalTarget.id&&($scope.draggedFileId=$event.explicitOriginalTarget.id),"dragleave"===$event.type&&$scope.removeFromSelected(parseInt($scope.draggedFileId))},$scope.beforeChange=function(file,$event){"move"===$event.dataTransfer.dropEffect?$http({method:"GET",url:"/Api/Media/"+$scope.movedFileId}).then(function(response){$scope.draggedFiles.push(response.data.payload);for(var i=0;i<$scope.collection.models.length;i++)$scope.collection.models[i].data.id===$scope.movedFileId&&($scope.collection.models[i].data.selectedClass=!0);$scope.movedFileId=""},function(rejection){console.log(rejection.data)}):($scope.imageMoved=!1,$scope.uploadFiles(),$scope.movedFileId="")},$scope.imageMoved=!1,$scope.dragFromLib=function($isDragging,$class,$event,fileId){console.log("isDragging",$isDragging),console.log("event",$event),console.log("fileId",fileId),"dragleave"===$event.type&&($scope.movedFileId=fileId,$scope.imageMoved=!0)},$scope.dragClass=!1,$scope.uploadFiles=function(files){$scope.showLibrary=!1,$scope.uploadComp=!1,$scope.draggedDivChanged=!0;var position=$mdPanel.newPanelPosition().absolute().center(),config={attachTo:angular.element(document.body),scope:$scope,controller:DialogController,controllerAs:"ctrl",id:"uploadPanel",disableParentScroll:this.disableParentScroll,templateUrl:"uploadedFiles.html",hasBackdrop:!0,panelClass:"media-dialog",position:position,trapFocus:!0,zIndex:150,clickOutsideToClose:!1,escapeToClose:!1,focusOnOpen:!0};$mdPanel.open(config),$scope.dragLibraryVisible&&($scope.dragLibraryVisible=!0)},$scope.removeFromSelected=function(fileId){for(var i=$scope.draggedFiles.length-1;i>=0;i--)$scope.draggedFiles[i].id===fileId&&$scope.draggedFiles.splice(i,1);for(var j=0;j<$scope.collection.models.length;j++)$scope.collection.models[j].data.id===fileId&&($scope.collection.models[j].data.selectedClass=!1)},$scope.uploadToLibrary=function(files){$scope.uploadComp=!1,$scope.imageMoved=!1,$scope.draggedDivChanged=!1;var position=$mdPanel.newPanelPosition().absolute().center(),config={attachTo:angular.element(document.body),scope:$scope,controller:DialogController,controllerAs:"ctrl",disableParentScroll:this.disableParentScroll,templateUrl:"uploadedFiles.html",hasBackdrop:!0,panelClass:"media-dialog",position:position,trapFocus:!0,zIndex:150,clickOutsideToClose:!1,escapeToClose:!1,focusOnOpen:!0};$mdPanel.open(config),$scope.files=files},$scope.openLibrary=function(){$scope.libraryVisible?$scope.libraryVisible&&($scope.libraryVisible=!1):($scope.libraryVisible=!0,$scope.dragLibraryVisible=!1,$scope.uploadMedia())},$scope.mediaLibrary=function(){$scope.dragLibraryVisible?$scope.dragLibraryVisible&&($scope.libraryVisible=!1,$scope.dragLibraryVisible=!1):($scope.libraryVisible=!1,$scope.dragLibraryVisible=!0,$scope.uploadMedia())},$scope.uploadMedia=function(){$scope.collection.fetch().then(function(response){for(var i=0;i<$scope.collection.models.length;i++)if($scope.draggedFiles&&$scope.draggedFiles.length>0)for(var j=0;j<$scope.draggedFiles.length;j++)$scope.draggedFiles[j].id===$scope.collection.models[i].data.id&&($scope.collection.models[i].data.selectedClass=!0);else $scope.collection.models[i].data.selectedClass=!1})},$scope.$watch("files",function(files){if(null!==files){if($scope.dragClass=!1,!angular.isArray(files))return void $timeout(function(){$scope.files=files=[files]});for(var promises=[],i=0;i<files.length;i++)$scope.errorMsg=null,function(f){$scope.imageMoved===!1&&promises.push($scope.saveMedia(f))}(files[i]);promises.length>0&&$q.all(promises).then(function(data){$scope.uploadComp=!0,$scope.uploadMedia(),$scope.draggedDivChanged===!0&&angular.forEach(data,function(dragged){$scope.draggedFiles.push(dragged.data)})})["catch"](function(error){$scope.uploadComp=!0})}}),$scope.saveMedia=function(file){return file.errorMsg=null,file.uploadStatus=!1,file.errorUpload=!1,file.upload=Upload.upload({url:"https://app.sitetheory.io:3000/?session="+_.cookie("SITETHEORY"),data:{file:file}}),file.upload.then(function(response){file.result=response.data,file.uploadStatus=!0,file.errorUpload=!1},function(response){response.config.data.file.upload.aborted===!0?(file.uploadStatus=!1,file.errorUpload=!0,file.errorMsg="Aborted"):(file.uploadStatus=!1,file.errorUpload=!0,file.errorMsg="Server Error!Please try again")}),file.upload.progress(function(evt){file.progress=Math.min(100,parseInt(100*evt.loaded/evt.total))}),file.upload},$scope.addDeleteMedia=function(selectedStatus,fileId,$event){if(selectedStatus===!0){for(var k=0;k<$scope.draggedFiles.length;k++)if($scope.draggedFiles[k].id===fileId){$scope.draggedFiles.splice(k,1);for(var j=0;j<$scope.collection.models.length;j++)$scope.collection.models[j].data.id===fileId&&($scope.collection.models[j].data.selectedClass=!1,angular.element($event.currentTarget).removeClass("minus_icon"),angular.element($event.currentTarget).addClass("add_icon"))}}else selectedStatus!==!1&&void 0!==selectedStatus||$http({method:"GET",url:"/Api/Media/"+fileId}).then(function(response){$scope.draggedFiles.push(response.data.payload);for(var j=0;j<$scope.collection.models.length;j++)$scope.collection.models[j].data.id===fileId&&($scope.collection.models[j].data.selectedClass=!0,angular.element($event.currentTarget).removeClass("add_icon"),angular.element($event.currentTarget).addClass("minus_icon"))})}},templateUrl:Stratus.BaseUrl+"sitetheorystratus/stratus/components/mediaSelector"+(Stratus.Environment.get("production")?".min":"")+".html"}});