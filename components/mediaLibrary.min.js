!function(root,factory){"function"==typeof define&&define.amd?define(["stratus","underscore","angular","angular-material","angular-file-upload","stratus.components.search","stratus.components.pagination","stratus.components.mediaDetails","stratus.components.mediaUploader","stratus.directives.singleClick","stratus.directives.src","stratus.services.registry","stratus.services.commonMethods","stratus.services.media"],factory):factory(root.Stratus,root._)}(this,function(Stratus,_){Stratus.Modules.ngFileUpload=!0,Stratus.Components.MediaLibrary={bindings:{ngModel:"="},controller:function($scope,$attrs,registry,$mdDialog,commonMethods,media){commonMethods.componentInitializer(this,$scope,$attrs,"media_library",!0);this.showDetails=function(media){$mdDialog.show({attachTo:angular.element(document.querySelector("#listContainer")),controller:function($scope,media,collection){$scope.media=media,$scope.collection=collection},template:'<stratus-media-details media="media" collection="collection"></stratus-media-details>',clickOutsideToClose:!0,focusOnOpen:!0,autoWrap:!0,locals:{media:media,collection:$scope.collection}})},this.deleteMedia=function(fileId){Stratus.Environment.get("production")||console.log(fileId);$mdDialog.show($mdDialog.confirm().title("DELETE MEDIA").textContent("Are you sure you want to permanently delete this from your library? You may get broken images if any content still uses this image.").multiple(!0).ok("Yes").cancel("No")).then(function(){media.deleteMedia(fileId).then(function(response){commonMethods.getStatus(response).code==commonMethods.RESPONSE_CODE().success?media.getMedia($scope):$mdDialog.show($mdDialog.alert().parent(angular.element(document.querySelector("#popupContainer"))).clickOutsideToClose(!1).title("Error").multiple(!0).textContent(commonMethods.getStatus(response).message).ok("Ok"))},function(rejection){Stratus.Environment.get("production")||console.log(rejection.data)})})},this.openUploader=function(ngfMultiple){media.openUploader($scope,ngfMultiple)},this.registry=new registry,this.registry.fetch({target:$attrs.target||"Media",id:null,manifest:!1,decouple:!0,api:{limit:_.isJSON($attrs.limit)?JSON.parse($attrs.limit):30}},$scope)},templateUrl:Stratus.BaseUrl+"sitetheorystratus/stratus/components/mediaLibrary"+(Stratus.Environment.get("production")?".min":"")+".html"}});