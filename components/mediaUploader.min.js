!function(root,factory){"function"==typeof define&&define.amd?define(["stratus","underscore","angular","angular-material","angular-file-upload","stratus.directives.singleClick","stratus.directives.validateUrl","stratus.directives.src","stratus.services.commonMethods","stratus.services.media"],factory):factory(root.Stratus,root._)}(this,function(Stratus,_){Stratus.Components.MediaUploader={bindings:{ngModel:"=",collection:"<",ngfMultiple:"<",fileId:"<"},controller:function($scope,$attrs,$mdDialog,commonMethods,media){commonMethods.componentInitializer(this,$scope,$attrs,"media_uploader",!0);var $ctrl=this;$ctrl.$onInit=function(){$ctrl.files=[],$ctrl.uploadingFiles=!1,$ctrl.invalidFilesMsg=[],$ctrl.services={video:[{label:"Youtube",value:"youtube"},{label:"Vimeo",value:"vimeo"}],link:[{label:"Direct Link",value:"directlink"}]},$ctrl.videos=[{service:$ctrl.services.video[0],url:null,title:null,tags:[],mime:"video",description:null,isUploaded:!1}],$ctrl.links=[{service:$ctrl.services.link[0],url:null,title:null,tags:[],description:null,isUploaded:!1}],$ctrl.done=done,$ctrl.uploadFiles=uploadFiles,$ctrl.createTag=createTag,$ctrl.addExternalFile=addExternalFile,$ctrl.removeExternalFile=removeExternalFile,$ctrl.saveOneFile=saveOneFile,$ctrl.saveAllFiles=saveAllFiles};function done(){$mdDialog.hide($ctrl.files)}function addExternalFile(fileType){var newFile={url:null,name:null,tags:[],description:null,isUploaded:!1};"video"===fileType?(newFile.service=$ctrl.services.video[0],$ctrl.videos.push(newFile)):(newFile.service=$ctrl.services.link[0],$ctrl.links.push(newFile))}function removeExternalFile(index,fileType){fileType&&"video"===fileType?$ctrl.videos.splice(index,1):$ctrl.links.splice(index,1)}function saveOneFile(file,fileType){data={service:file.service.value,file:file.url,name:file.title,tags:file.tags,description:file.description},data.mime=fileType&&"video"===fileType?"video":"image/"+file.url.split(".").pop(),media.saveMediaUrl(data).then(function(response){if(commonMethods.getStatus(response).code==commonMethods.RESPONSE_CODE().success)if(fileType&&"video"===fileType){var index=$ctrl.videos.indexOf(file);$ctrl.videos[index].isUploaded=!0}else{index=$ctrl.links.indexOf(file);$ctrl.links[index].isUploaded=!0}else console.error(commonMethods.getStatus(response).code+" - "+commonMethods.getStatus(response).message)})}function saveAllFiles(files,fileType){files.forEach(function(file){file.isUploaded||saveOneFile(file,fileType)})}function uploadFiles(files,invalidFiles){if($ctrl.invalidFilesMsg=[],invalidFiles.length>0&&invalidFiles.forEach(function(file){var msg;switch(file.$error){case"maxSize":msg="Looks like some of your files is too large. You can upload files up to ";break;case"maxFiles":msg="Maximum number of files allowed up to ";break;case"pattern":msg="Sitetheory only allow file with types "}$ctrl.invalidFilesMsg=_.union($ctrl.invalidFilesMsg,[msg+file.$errorParam])}),files.length>0){if($ctrl.ngfMultiple)for(i=0;i<files.length;i++)$ctrl.files.push(media.fileUploader(files[i]));else $ctrl.files=[media.fileUploader(files[0],$ctrl.fileId)];media.getMedia($ctrl)}}function createTag(file,query){var data={name:query};media.createTag(data).then(function(response){if(commonMethods.getStatus(response).code==commonMethods.RESPONSE_CODE().success)if("video"===file.mime){var index=$ctrl.videos.indexOf(file);$ctrl.videos[index].tags.push(response.data.payload)}else{index=$ctrl.links.indexOf(file);$ctrl.links[index].tags.push(response.data.payload)}})}},templateUrl:Stratus.BaseUrl+"sitetheorystratus/stratus/components/mediaUploader"+(Stratus.Environment.get("production")?".min":"")+".html"}});