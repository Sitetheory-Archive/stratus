!function(root,factory){"function"==typeof define&&define.amd?define(["stratus","jquery","underscore","angular","angular-material","stratus.services.media"],factory):factory(root.Stratus,root._)}(this,function(Stratus,_){Stratus.Components.MediaDetails={bindings:{ngModel:"=",media:"<",collection:"<"},controller:function($scope,$mdDialog,$attrs,commonMethods,media){function deleteMedia(){var fileId=$ctrl.media.data.id;Stratus.Environment.get("production")||console.log(fileId),$mdDialog.show($mdDialog.confirm().title("DELETE MEDIA").textContent("Are you sure you want to permanently delete this from your library? You may get broken images if any content still uses this image.").multiple(!0).ok("Yes").cancel("No")).then(function(){media.deleteMedia(fileId).then(function(response){commonMethods.getStatus(response).code==commonMethods.RESPONSE_CODE().success?($mdDialog.cancel(),media.getMedia($ctrl)):$mdDialog.show($mdDialog.alert().parent(angular.element(document.querySelector("#popupContainer"))).clickOutsideToClose(!1).title("Error").multiple(!0).textContent(commonMethods.getStatus(response).message).ok("Ok"))},function(rejection){Stratus.Environment.get("production")||console.log(rejection)})})}function getLinkMedia(){commonMethods.copyToClipboard($ctrl.mediaUrl)&&$mdDialog.show($mdDialog.confirm().textContent("Link is copied to clipboard").multiple(!0).ok("OK"))}function closeDialog(){$mdDialog.cancel()}function openUploader(ngfMultiple,fileId){media.openUploader($ctrl,ngfMultiple,fileId,$scope)}function createTag(query,fileId,tags){var data={name:query};media.createTag(data).then(function(response){if(commonMethods.getStatus(response).code==commonMethods.RESPONSE_CODE().success&&void 0!==fileId&&void 0!==tags){var dataRes={};$ctrl.tags.push(response.data.payload),dataRes.tags=$ctrl.tags,updateMedia(fileId,dataRes)}})}function updateMedia(fileId,data){media.updateMedia(fileId,data).then(function(response){commonMethods.getStatus(response).code==commonMethods.RESPONSE_CODE().success&&media.getMedia($ctrl)})}function editItem(item){item.editing=!0}function doneEditing(fileId,item){var data={};item.description&&(data.description=item.description),item.name&&(data.name=item.name),item.editing=!1,updateMedia(fileId,data)}function searchFilter(query){return $ctrl.collection.filter(query)}commonMethods.componentInitializer(this,$scope,$attrs,"media_details",!0);var $ctrl=this;$ctrl.$onInit=function(){$ctrl.mediaUrl="http://"+$ctrl.media.data.prefix+"."+$ctrl.media.data.extension,$ctrl.tags=$ctrl.media.data.tags,$ctrl.infoId=$ctrl.media.data.id,$ctrl.selectedName={name:$ctrl.media.data.name,editing:!1},$ctrl.selectedDesc={description:$ctrl.media.data.description,editing:!1},$ctrl.deleteMedia=deleteMedia,$ctrl.getLinkMedia=getLinkMedia,$ctrl.closeDialog=closeDialog,$ctrl.openUploader=openUploader,$ctrl.createTag=createTag,$ctrl.editItem=editItem,$ctrl.doneEditing=doneEditing,$ctrl.searchFilter=searchFilter},$scope.$on("uploadSuccess",function(event,files){console.log(files),files[0].errorUpload||($ctrl.mediaUrl=files[0].result.url)}),$scope.$watch("$ctrl.tags",function(data){if(void 0!==$ctrl.infoId){var dataRes={};dataRes.tags=$ctrl.tags,media.updateMedia($ctrl.infoId,dataRes).then(function(response){media.getMedia($ctrl)},function(rejection){Stratus.Environment.get("production")||console.log(rejection)})}},!0)},templateUrl:Stratus.BaseUrl+"sitetheorystratus/stratus/components/mediaDetails"+(Stratus.Environment.get("production")?".min":"")+".html"}});